# Configurations
_subdirectory: template
_answers_file: .copier_answers.yml
_jinja_extensions:
    - cookiecutter.extensions.SlugifyExtension

project_name:
    type: str
    placeholder: New Python project
    help: |
        An awesome project needs an awesome name. Tell me yours.
           Here, you can use capital letters, digits, underscores, hyphens, and other characters.
           This name will be used, for example, in the title of your README.md file.
           We recommend keeping it short, simple, and meaningful.
           Short names are easier to understand, maintain, and use as your project evolves.
           If you're having difficulty coming up with a great name that meets these criteria, why not ask chatGPT for help.

change_project_dir_name:
    type: str
    help: |
        Isn't {{ project_name | slugify }} perfect for the project's directory name?
           Why we're suggestin this name?
           Convention over configuration.
           In this case the conventions are:
             - lowercase letters to maintain consistency across operating systems.
             - Separate words with hyphens (`-`) for better readability and compatibility with command-line tools.
             - Keep it short and descriptive to make paths easier to type and understand.
             - Avoid special characters like `@`, `#`, `$`, or `&`. Stick to letters, numbers, and hyphens.
             - Choose a name that reflects your project's purpose or functionality.
           Would you like to change it?
    choices:
        No, thanks: "no"
        Yes, please: "yes"

project_dir_name:
    type: str
    placeholder: new-python-project
    help: |
        What's your project directory name?
    default: |-
        {% if change_project_dir_name == 'no' -%}
            {{ project_name | slugify }}
        {%- else -%}
            {#- Ask user -#}
        {%- endif %}
    when: "{{ change_project_dir_name != 'no' }}"
    validator: >-
        {% if not (project_dir_name | regex_search('^[a-z0-9\-]+$')) %}
        The project_dir_name must contains lowercase letters, digits or hyphens.
        {% endif %}

change_project_scripts_dir_name:
    type: str
    help: |
        Isn't {{ project_dir_name.replace('-', '_') }} perfect for the project script's directory name?
           Why we're suggestin this name?
           Convention over configuration.
           In this case the conventions are:
             - lowercase letters to maintain consistency across operating systems.
             - Separate words with underscore (`_`) for Python compatibility. In Python, hyphens are not allowed in module or package names, which can lead to import errors and execution issues.
             - Keep it short and descriptive to make paths easier to type and understand.
             - Avoid special characters like `@`, `#`, `$`, or `&`. Stick to letters, numbers, and hyphens.
             - A name that reflects your project's directory name.
           Would you like to change it?
    choices:
        No, thanks: "no"
        Yes, please: "yes"

common_scripts_dir_name:
    type: str
    help: |
        Would you like to use a common directory name for your scripts, such as src, scripts, bin, or utils?
           These names are widely used in Python projects for organizing source code and utility scripts.
           You can select one of these or specify your own preferred directory name.
    choices:
      bin: "bin"
      scripts: "scripts"
      src: "src"
      utils: "utils"
      No, I want to specify my own name: "no"
    when: "{{ change_project_scripts_dir_name == 'yes' }}"


project_scripts_dir_name:
    type: str
    placeholder: python_project
    help: |
        What's your script's directory name?
    default: |-
        {% if change_project_scripts_dir_name == 'no' -%}
            {{ project_dir_name.replace('-', '_') }}
        {% elif common_scripts_dir_name != 'no' -%}
            {{ common_scripts_dir_name }}
        {%- else -%}
            {#- Ask user -#}
        {%- endif %}
    when: "{{ common_scripts_dir_name == 'no' }}"
    validator: >-
        {% if not (project_scripts_dir_name | regex_search('^[a-z0-9\_]+$')) %}
        The project_scripts_dir_name must contains lowercase letters, digits or underscore.
        {% endif %}
